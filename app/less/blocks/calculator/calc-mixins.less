.calc-opener-mix(@n, @i: 1) when (@i =< @n) {
	@items:
		print,
		cover,
		block,
		inset;
	@item: extract(@items, @i);
	
	input#@{item}-open:checked~.@{item} {
		display: block;
	}

	input#@{item}-open:checked~label[for='@{item}-open'] .@{item}-open__on {
		display: none;
	}

	input#@{item}-open:checked~label[for='@{item}-open'] .@{item}-open__off {
		display: block;
	}
	
	.calc-opener-mix(@n, (@i + 1));
}

//put to .calculator__switcher
//for .cover and .inset
.calc-switcher-gl(@id) {
	input[id='@{id}-off']:checked~&-labels label[for='@{id}-off'] {
		opacity: 1;
	}

	input[id='@{id}-on']:checked~&-labels {
		background: linear-gradient(#86d5fa, #7abfed 99%);
		box-shadow:
			inset 0 2px 1px -1px rgba(0, 0, 0, 0.85),
			inset -1px -2px 0px -1px rgba(255, 255, 255, 1),
			inset 1px -2px 0px -1px rgba(255, 255, 255, 1),
			inset 0 0px 5px 0 rgba(0, 0, 0, 0.2),
			inset 0 0px 7px 0 rgba(0, 0, 0, 0.3),
			inset 0 2px 5px 0 rgba(0, 0, 0, 0.3),
			inset 0 2px 5px 0 rgba(0, 0, 0, 0.5);
	}

	input[id='@{id}-on']:checked~&-labels label[for='@{id}-on'] {
		opacity: 1;
	}
}

//put to .calculator__switcher
//for cover_effects
.calc-switcher_cover_effects(@id) {
	input[id='@{id}-off']:checked~.cover_effects__switcher-container label[for='@{id}-off'] {
		opacity: 1;
	}
	
	input[id='@{id}-on']:checked~.cover_effects__switcher-container label[for='@{id}-on'] {
		opacity: 1;
	}

	input[id='@{id}-on']:checked~.cover_effects__switcher-container &-box--@{id} &-labels {
		background: linear-gradient(#86d5fa, #7abfed 99%);
		box-shadow:
			inset 0 2px 1px -1px rgba(0, 0, 0, 0.85),
			inset -1px -2px 0px -1px rgba(255, 255, 255, 1),
			inset 1px -2px 0px -1px rgba(255, 255, 255, 1),
			inset 0 0px 5px 0 rgba(0, 0, 0, 0.2),
			inset 0 0px 7px 0 rgba(0, 0, 0, 0.3),
			inset 0 2px 5px 0 rgba(0, 0, 0, 0.3),
			inset 0 2px 5px 0 rgba(0, 0, 0, 0.5);
	}
}

//put to .calculator__switcher
//for others
.calc-switcher(@id) {
	input[id='@{id}-off']:checked~&-box label[for='@{id}-off'] {
		opacity: 1;
	}
	
	input[id='@{id}-on']:checked~&-box label[for='@{id}-on'] {
		opacity: 1;
	}

	input[id='@{id}-on']:checked~&-box--@{id} &-labels {
		background: linear-gradient(#86d5fa, #7abfed 99%);
		box-shadow:
			inset 0 2px 1px -1px rgba(0, 0, 0, 0.85),
			inset -1px -2px 0px -1px rgba(255, 255, 255, 1),
			inset 1px -2px 0px -1px rgba(255, 255, 255, 1),
			inset 0 0px 5px 0 rgba(0, 0, 0, 0.2),
			inset 0 0px 7px 0 rgba(0, 0, 0, 0.3),
			inset 0 2px 5px 0 rgba(0, 0, 0, 0.3),
			inset 0 2px 5px 0 rgba(0, 0, 0, 0.5);
	}
	
	input[id='@{id}-off']:checked~&-img &-img_off {
		display: block;
	}
	
	input[id='@{id}-on']:checked~&-img &-img_on {
		display: block;
	}
}

//scroller generation
.calc-scroller-generate(@id, @items, @n, @i: 1) when (@i =< @n) {
	@item: extract(@items, @i);
	
	input#@{id}-@{item}:checked~&-items label[for='@{id}-@{item}'] {opacity: 1;}
	
	.calc-scroller-generate(@id, @items, @n, (@i + 1));
}

.calc-scroller-img-generate(@id, @items, @n, @i: 1) when (@i =< @n) {
	@item: extract(@items, @i);
	
	@margin: -(100% * (@i - 1));
	@margin-hover: -100% * @n + @margin;
	
	.@{id}-img--@{item} img {
		margin-left: @margin;
	}

	.@{id}-img--@{item}:hover img {
		margin-left: @margin-hover;
	}

	input#@{id}-@{item}:checked~&-items .@{id}-img--@{item} img {
		margin-left: @margin-hover;
	}
	
	.calc-scroller-img-generate(@id, @items, @n, (@i + 1));
}

.calc-scroller-img(@id, @n) when (@id = print_size) {
	@m: @n - 1;
	.@{id}-img img {width: (100% * @m * 2);}

	.calc-scroller-img-generate(@id, @items, @m);
}
.calc-scroller-img(@id, @n) when (default()) {
	@m: @n;
	.@{id}-img img {width: (100% * @m * 2);}

	.calc-scroller-img-generate(@id, @items, @m);
}

//put to .calculator__scroller
.calc-scroller(@id, @items, @n) {
	.@{id}-item {
		width: (100% / @n);
	}

	.calc-scroller-img(@id, @n);
	
	.calc-scroller-generate(@id, @items, @n);
}

//selector generation
.calc-selector-generate(@id, @items, @n, @i: 1) when (@i =< @n) {
	@item: extract(@items, @i);
	
	&-inputs#@{id}-@{item}:checked~.calculator__header--inner label[for='@{id}-@{item}'] {
		background-image: linear-gradient(#3093D8, #BBE7FD);
		box-shadow:
			inset 0 2px 1px -1px rgba(0, 0, 0, 0.85),
			inset -1px -2px 1px -1px rgba(255, 255, 255, 1),
			inset 1px -2px 1px -1px rgba(255, 255, 255, 1),
			inset 0 0px 5px 0 rgba(0, 0, 0, 0.3),
			inset 0 2px 5px 0 rgba(0, 0, 0, 0.5);
	}

&-inputs#@{id}-@{item}:checked~.@{id} .@{id}__item--@{item} {
	display: block;
}
	
	.calc-selector-generate(@id, @items, @n, (@i + 1));
}

//put to .print_pages
//@id: print_pages
.calc-selector(@id, @items, @n) {
	&-inputs--main:checked~.calculator__header--inner .print_pages-labels {
		display: block;
	}
	
	.calc-selector-generate(print_pages, @print_pages, 3);
}

.bond_pops-gener(@n, @i: 1) when (@i =< @n) {
	@items:
		pur,
		eva;
	@item: extract(@items, @i);
	
	&--@{item}:hover span {display: block;}

	.bond_pops-gener(@n, (@i + 1));
}

//ruler generation
.calc-ruler-generate(@id, @items, @n, @i: 1) when (@i =< @n) {
	@item: extract(@items, @i);
	
	input#@{id}-@{item}:checked~&-labels label[for='@{id}-@{item}']:after {display: block;}
	
	input#@{id}-@{item}:checked~&-labels label[for='@{id}-@{item}'] span {
		color: black;
		background-color: white;
		border-color: #51aeed;
		
		&:before {
			content: '';
			position: absolute;
			width: 7px;
			height: 7px;
			left: 50%;
			margin-left: -4.5px;
			bottom: -5px;
			background: linear-gradient(to top right, white 60%, transparent 60%);
			border-left: 1px solid #51aeed;
			border-bottom: 1px solid #51aeed;
			transform: rotate(-45deg);
		}
	}
	
	.calc-ruler-generate(@id, @items, @n, (@i + 1));
}

//put to .calculator__ruler
.calc-ruler(@id, @items, @n) {
	&-labels {
		&:before {
			width: (100% - (100% / @n));
			left: (100% / @n) / 2;
		}
		
		li {width: (100% / @n);}
	}
	
	&-types {
		width: (100% - (100% / @n));
		left: (100% / @n) / 2;
	}
	
	.calc-ruler-generate(@id, @items, @n);
}