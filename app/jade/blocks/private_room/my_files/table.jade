include section_vars

mixin my_files_table(name_section, name_total, name, data)
	-var title_arr = []
	.clearfix(class=class_name([name_total, name], '__header'))
		div(class=class_name([name_total, name], '__header-item') + ' ' + name + '__header-item-check')
		-title_arr.push('check')
		each item in data.header
			p(class=class_name([name_total, name], '__header-item') + ' ' + name + '__header-item-' + item.id)=item.name
			-title_arr.push(item.id)
	+my_files_table_inner(name_section, name_total, name, data.items, title_arr)

mixin my_files_table_inner(name_section, name_total, name, items, title_arr)
	-var color = 'color2'
	-var lvl = 0
	ul(class=class_name([name_total, name], '__body'))
		each item, i in items
			if color == 'color1'
				-color = 'color2'
			else
				-color = 'color1'
			+li_build(name_section, name_total, name, item, i, title_arr, color, lvl)
			if item.split
				each elem, j in item.split
					if color == 'color1'
						-color = 'color2'
					else
						-color = 'color1'
					+li_build(name_section, name_total, name, elem, j, title_arr, color, lvl)

mixin li_build(name_section, name_total, name, item, i, title_arr, color, lvl)
	-var folder_class = ''
	-var history_class = ''
	-var spec_class = ''
	if item.folder
		-folder_class = ' ' + name + '__items--folder'
	if item.history
		-history_class = ' ' + name + '__items--history' + ' ' + name + '__items--history_final'
	if item.new
		-spec_class = ' ' + name + '__items--new'
	li.clearfix(class=class_name([name_total, name], '__items') + folder_class + ' ' + name_total + '__items--' + color + ' ' + name + '__items--lvl' + lvl + history_class + spec_class)

		if item.folder
			input(class=name + '__item-folder_opener-input' type='checkbox' id='folder_opener--' + item.id + '_' + name_section)

		if item.history
			input(class=name + '__item-history_opener-input' type='checkbox' id='history_opener--' + item.id + '_' + name_section)

		div(class=class_name([name_total, name], '__item-l'))
			each title in title_arr
				-var check_class = ''
				if title == 'check'
					-check_class = ' my_files__checkbox'
				div(class=class_name([name_total, name], '__item') + ' ' + name + '__item-' + title + ' ' + name + '__item-' + title + '--lvl' + lvl + check_class)
					case title
						when 'check'
							if item.folder
								input(type='checkbox' id='files_check-' + item.id + '_' + name_section)
							else
								input(type='checkbox' name='files_check' id='files_check-' + item.id + '_' + name_section)
							label.my_files__check(for='files_check-' + item.id + '_' + name_section)

						when 'name'
							-var file_type = ' sprite_icon-type_file'
							if item.folder
								-file_type = ' sprite_icon-type_folder'
								label(for='folder_opener--' + item.id + '_' + name_section)
							if item.history
								label(for='history_opener--' + item.id + '_' + name_section)
							-var type = '.' + item.type
							if item.type == 'folder'
								-type = ''
							span(class=file_type)=item.name + type

						when 'size'
							=item.size
						when 'manage'
							include manage

		if item.folder
			+my_files_table_inner_sub(name_section, name_total, name, item.folder, title_arr, color, lvl)

		if item.history
			+my_files_table_inner_history(name_section, name_total, name, item.history, title_arr, color, lvl)

mixin my_files_table_inner_sub(name_section, name_total, name, items, title_arr, color, lvl)
	-lvl = lvl + 1
	ul(class=name_total + '__body' + ' ' + name + '__body' + ' ' + name + '__body' + '_sub')
		each item, i in items
			if color == 'color1'
				-color = 'color2'
			else
				-color = 'color1'
			-var folder_class = ''
			-var history_class = ''
			-var spec_class = ''
			if item.folder
				-folder_class = ' ' + name + '__items--folder'
			if item.history
				-history_class = ' ' + name + '__items--history' + ' ' + name + '__items--history_final'
			if item.new
				-spec_class = ' ' + name + '__items--new'
				
			li.clearfix(class=class_name([name_total, name, name + '_sub'], '__items') + folder_class + ' ' + name_total + '__items--' + color + ' ' + name + '__items--lvl' + lvl + history_class + spec_class)

				if item.folder
					input(class=name + '__item-folder_opener-input' type='checkbox' id='folder_opener--' + item.id + '_' + name_section)
				
				if item.history
					input(class=name + '__item-history_opener-input' type='checkbox' id='history_opener--' + item.id + '_' + name_section)

				div(class=class_name([name_total, name], '__item-l'))
					each title in title_arr
						-var check_class = ''
						if title == 'check'
							-check_class = ' my_files__checkbox'
						div(class=class_name([name_total, name, name + '_sub'], '__item') + class_name([name, name + '_sub'], '__item-' + title) + ' ' + name + '__item-' + title + '--lvl' + lvl + check_class)
							case title
								when 'check'
									if item.folder
										input(type='checkbox' id='files_check-' + item.id + '_' + name_section)
									if item.status
										input(type='checkbox' id='files_check-' + item.id + '_' + name_section disabled)
									else
										input(type='checkbox' name='files_check' id='files_check-' + item.id + '_' + name_section)
									label.my_files__check(for='files_check-' + item.id + '_' + name_section)
								when 'name'
									-var file_type = ' sprite_icon-type_file'
									if item.folder
										-file_type = ' sprite_icon-type_folder'
										label(for='folder_opener--' + item.id + '_' + name_section)
									if item.history
										label(for='history_opener--' + item.id + '_' + name_section)
									-var type = '.' + item.type
									if item.type == 'folder'
										-type = ''
									span(class=file_type)=item.name + type

								when 'size'
									=item.size
								when 'manage'
									include manage
				if item.folder
					+my_files_table_inner_sub(name_section, name_total, name, item.folder, title_arr, color, lvl)
				
				if item.history
					+my_files_table_inner_history(name_section, name_total, name, item.history, title_arr, color, lvl)

mixin my_files_table_inner_history(name_section, name_total, name, items, title_arr, color, lvl)
	ul(class=name_total + '__body' + ' ' + name + '__body' + ' ' + name + '__body_history')
		each item, i in items
			-lvl = lvl + 1
			if color == 'color1'
				-color = 'color2'
			else
				-color = 'color1'
			-var history_class = ' ' + name + '__items--history'
			-var spec_class = ''
			if i == (items.length - 1)
				-history_class = history_class + history_class + '_last'
			if item.new
				-spec_class = ' ' + name + '__items--new'
				
			li.clearfix(class=class_name([name_total, name], '__items') + ' ' + name_total + '__items--' + color + history_class + spec_class)

				div(class=class_name([name_total, name], '__item-l'))
					each title in title_arr
						-var check_class = ''
						-var hist_class = ' ' + name + '__item-' + title + '--history'
						if title == 'check'
							-check_class = ' my_files__checkbox'
						if title == 'name'
							if name_section == 'working'
								-hist_class = hist_class + ' sprite_icon-arrow_history--gray'
							else
								-hist_class = hist_class + ' sprite_icon-arrow_history--white'
						div(class=class_name([name_total, name], '__item') + class_name([name], '__item-' + title) + check_class + hist_class + ' ' + name + '__item-' + title + '--lvl' + lvl)
							case title
								when 'check'
									if item.status
										input(type='checkbox' id='files_check-' + item.id + '_' + name_section disabled)
									else
										input(type='checkbox' name='files_check' id='files_check-' + item.id + '_' + name_section)
									label.my_files__check(for='files_check-' + item.id + '_' + name_section)
								when 'name'
									-var file_type = ' sprite_icon-type_file'
									-var type = '.' + item.type
									span(class=file_type)=item.name + type

								when 'size'
									=item.size
								when 'manage'
									include manage

div(class=actualClass + '-table' + ' ' + actualClass + '-docs' + ' ' + actualClass + '-docs--' + name_section)
	-var vars = []
	case name_section
		when 'loaded'
			-vars = table_loaded
		when 'working'
			-vars = table_working
		when 'processing'
			-vars = table_processing
		when 'split'
			-vars = table_split
		default
			-vars = table_loaded1
			
	+my_files_table(name_section, actualClass + '-table', actualClass + '-docs', {
		header: [{
			id: 'name',
			name: 'Название'
		}, {
			id: 'size',
			name: 'Размер'
		}, {
			id: 'manage',
			name: 'Действия / Статусы'
		}],
		items: vars
		})